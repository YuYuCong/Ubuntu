# Usage: ~/.tmux.conf
# date:2018.02.12
#------------------------------------------

#-- base --#
set -g default-shell /bin/zsh
set -g default-terminal "screen"
#set -g default-terminal /usr/bin/tmux
set -g display-time 3000
set -g history-limit 65535
#---------------------------------------------------

#水平或垂直分割窗口 (C+A+ :split-window + v/h)
# 默认使用"上下分割和%左右分割
unbind '"'
bind - splitw -v #分割成上下两个窗口
unbind %
bind | splitw -h #分割成左右两个窗口
#----------------------------------------------

#选择分割的窗格
bind k selectp -U #选择上窗格
bind j selectp -D #选择下窗格
bind h selectp -L #选择左窗格
bind l selectp -R #选择右窗格
#----------------------------------------------

#重新调整窗格的大小
bind ^k resizep -U 20
bind ^j resizep -D 20
bind ^h resizep -L 20
bind ^l resizep -R 20
#----------------------------------------------

#交换两个窗格
bind ^u swapp -U
bind ^d swapp -D

bind ^a last
bind q killp
#----------------------------------------------

bind '~' splitw htop
bind ! splitw ncmpcppI
bind m command-prompt "splitw -h 'exec man %%'"

bind s save-buffer ~/.tmux-session
#----------------------------------------------

#定制状态行

set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # 0:bash
#set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # session-name
set -g status-right "#[fg=yellow,bright][ #[fg=cyan]#W #[fg=yellow]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]"
#set -g status-right-attr bright

set -g status-bg black
set -g status-fg white
set -g set-clipboard on

#setw -g window-status-current-attr bright
#setw -g window-status-current-bg red
#setw -g window-status-current-bg green
setw -g window-status-current-fg white

#set -g status-utf8 on
set -g status-interval 1

#set -g visual-activity on
#setw -g monitor-activity on

set -g status-keys vi
#----------------------------------------------

setw -g mode-keys vi


#开启鼠标支持
#tmux2.1以及之后版本：
set-option -g mouse on
#tmux2.1之前版本：
#setw -g mouse-resize-pane on
#setw -g mouse-select-pane on
#setw -g mouse-select-window on
#setw -g mode-mouse on

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o -sel clipbaord)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i -sel clipbaord"

#默认启动应用
# 根据自己的需求定制启动应用
#new -s work # 新建名为 work 的会话，并启动 mutt
#neww rtorrent # 启动 rtorrent
#neww vim # 启动 vim
#neww zsh
#selectw -t 3 # 默认选择标号为 3 的窗口

# 调用脚本
bind b source-file ~/.tmux/dev

#将r 设置为加载配置文件，并显示"reloaded!"信息
# 配置完以后，重启tmux起效，或者在命令行模式下输入：
# source-file ~/.tmux.conf
# 也可以直接在配置文件中加入下面这句话，以后重载只需要按前缀+r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# 配置布局保存
# run-shell ~/.tmux/tmux-resurrect/resurrect.tmu


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# 配置会话存储插件
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


